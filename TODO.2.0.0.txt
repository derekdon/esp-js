2.0.0 update notes, will form basis for release notes
[x] - Convert to tyepscript
[x] - makes observices of T, not t123
[x] - remove model changed event (fixed, or modified, not deleted)
[x] - remove all default exports
[x] - merge repos
[x] - rename all file types to lower case in esp-js
[x] - user generated .d.ts
[x] - expose single event subject for all events for a model
[ ] - merge all readmes and restructure docs
[ ] - single travis build with lerna
[ ] - single publish step via lerna
[ ] - shared test setups
[ ] - document monorepo setup
[ ] - document observeEventEnvelope
[ ] - Add Breaking Changes to release notes
[ ] - Ensure dependencies are exact versions

breaking changes:
 - model changed event support
 - reactive api now pushes envelopes, not T1, T2, T3
 - .where renamed to .filter
 - all default exports are now removed
 - Previously the typings exposed ModelObservable and EventObservable, however underthe covers there was only ever 1 javascript object 'Observable'.
   Now we're auto generating the types, all that exists is `Observable<T>`
 - Extending the observable API requires a bit of dancing as typescript doesn't seem to declaration merge correctly when the .d.ts files are in multiple files.
   It's the same patter as suggested here https://www.typescriptlang.org/docs/handbook/declaration-merging.html.
   However you need to declare the specific path of the .d.ts you're extending, rather than the root import 'esp-js':

     ```
        import * as Rx from 'rx';
        import {Observable } from 'esp-js';

        declare module 'esp-js/.dist/typings/reactive/observable' {
            export interface Observable<T> {
                toRxObservable?<T>(): Rx.Observable<T>;
            }
        }

        Observable.prototype.toRxObservable = function <T>(): Rx.Observable<T> {
            const source: Observable<T> = this;
            return Rx.Observable.create<T>(obs => {
                const subscription = source.subscribe(
                    (i: T) => obs.onNext(i),
                    () => obs.onCompleted()
                );
                return subscription;
            });
        };
     ```
 - fixed inconsistent usage of eventName/eventType, now eventType:string everywhere